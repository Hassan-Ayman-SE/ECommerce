version: '3.8'

services:
  order-service:
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - RABBITMQ_HOST=rabbitmq  # Connects to RabbitMQ service
    depends_on:
      - mssql
      - rabbitmq
    networks:
      - ecommerce-network

  inventory-service:
    build:
      context: .
      dockerfile: InventoryService/Dockerfile
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - RABBITMQ_HOST=rabbitmq  # Connects to RabbitMQ service
    depends_on:
      - mssql
      - rabbitmq
    networks:
      - ecommerce-network

  notification-service:
    build:
      context: .
      dockerfile: NotificationService/Dockerfile
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - RABBITMQ_HOST=rabbitmq  # Connects to RabbitMQ service
    depends_on:
      - rabbitmq
    networks:
      - ecommerce-network

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=TestPassword123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    networks:
      - ecommerce-network
    volumes:
      - mssql-data:/var/opt/mssql

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "15672:15672"  # RabbitMQ Management UI
      - "5672:5672"    # RabbitMQ Client connections
    networks:
      - ecommerce-network
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest  # Default credentials

networks:
  ecommerce-network:
    driver: bridge

volumes:
  mssql-data:
    driver: local
